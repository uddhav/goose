/*! For license information please see 92aa0158.77e1cdc8.js.LICENSE.txt */
(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[3186],{46792:(e,t,n)=>{"use strict";n.d(t,{$:()=>a});n(96540);var r=n(74848);const a=e=>{let{children:t,className:n="",variant:a="default",size:i="default",...s}=e;return(0,r.jsx)("button",{className:`flex rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent dark:focus:ring-offset-gray-900 ${{default:"bg-black dark:bg-white text-white dark:text-black hover:bg-accent/90 dark:hover:bg-accent/80",ghost:"bg-transparent hover:bg-gray-100 dark:hover:bg-gray-700 dark:text-gray-300",link:"bg-transparent text-accent hover:underline hover:text-textProminent dark:text-accent/90"}[a]} ${{default:"px-6 py-3",icon:"p-2"}[i]} ${n}`,...s,children:t})}},57356:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>f});var r=n(43938),a=n(16445),i=n(56347),s=n(96540),o=n(56289),c=n(52362),l=n(58069),d=n(46792),u=n(54631),m=n(62636),h=n(74848);const p={"GitHub MCP":"bg-yellow-100 text-yellow-800 border-yellow-200","Context7 MCP":"bg-purple-100 text-purple-800 border-purple-200",Memory:"bg-blue-100 text-blue-800 border-blue-200"};function f(){const e=(0,i.zy)(),[t,n]=(0,s.useState)(null),[f,g]=(0,s.useState)(!0),[b,x]=(0,s.useState)(null),[y,v]=(0,s.useState)(!1),[k,w]=(0,s.useState)({});(0,s.useEffect)((()=>{(async()=>{try{g(!0),x(null),w({}),v(!1);const t=new URLSearchParams(e.search).get("id");if(!t)return void x("No recipe ID provided");const r=await(0,u.d)(t);r?n(r):x("Recipe not found")}catch(t){x("Failed to load recipe details"),console.error(t)}finally{g(!1)}})()}),[e]);const j=t?.parameters||[];j.filter((e=>"required"===e.requirement));if(f)return(0,h.jsx)(r.A,{children:(0,h.jsx)("div",{className:"min-h-screen flex items-start justify-center py-16",children:(0,h.jsxs)("div",{className:"container max-w-5xl mx-auto px-4 animate-pulse",children:[(0,h.jsx)("div",{className:"h-12 w-48 bg-bgSubtle dark:bg-zinc-800 rounded-lg mb-4"}),(0,h.jsx)("div",{className:"h-6 w-full bg-bgSubtle dark:bg-zinc-800 rounded-lg mb-2"}),(0,h.jsx)("div",{className:"h-6 w-2/3 bg-bgSubtle dark:bg-zinc-800 rounded-lg"})]})})});if(b||!t)return(0,h.jsx)(r.A,{children:(0,h.jsx)("div",{className:"min-h-screen flex items-start justify-center py-16",children:(0,h.jsx)("div",{className:"container max-w-5xl mx-auto px-4 text-red-500",children:b||"Recipe not found"})})});const N="string"==typeof t.author?t.author:t.author?.contact;return(0,h.jsxs)(r.A,{children:[(0,h.jsx)("div",{className:"min-h-screen py-12",children:(0,h.jsxs)("div",{className:"max-w-4xl mx-auto px-4",children:[(0,h.jsxs)("div",{className:"mb-8 flex justify-between items-start",children:[(0,h.jsx)(o.A,{to:"/recipes",children:(0,h.jsxs)(d.$,{className:"flex items-center gap-2",children:[(0,h.jsx)(a.A,{className:"h-4 w-4"}),"Back"]})}),N&&(0,h.jsxs)("a",{href:`https://github.com/${N}`,target:"_blank",rel:"noopener noreferrer",className:"flex items-center gap-2 text-sm text-textSubtle hover:underline",children:[(0,h.jsx)("img",{src:`https://github.com/${N}.png`,alt:N,className:"w-6 h-6 rounded-full"}),"@",N]})]}),(0,h.jsxs)("div",{className:"bg-white dark:bg-[#1A1A1A] border border-borderSubtle dark:border-zinc-700 rounded-xl p-8 shadow-md",children:[(0,h.jsx)("h1",{className:"text-4xl font-semibold mb-2 text-textProminent dark:text-white",children:t.title}),(0,h.jsx)("p",{className:"text-textSubtle dark:text-zinc-400 text-lg mb-6",children:t.description}),t.activities?.length>0&&(0,h.jsxs)("div",{className:"mb-6 border-t border-borderSubtle dark:border-zinc-700 pt-6",children:[(0,h.jsx)("h2",{className:"text-2xl font-medium mb-2 text-textProminent dark:text-white",children:"Activities"}),(0,h.jsx)("div",{className:"flex flex-wrap gap-2",children:t.activities.map(((e,t)=>(0,h.jsx)("span",{className:"bg-surfaceHighlight dark:bg-zinc-900 border border-border dark:border-zinc-700 rounded-full px-3 py-1 text-sm text-textProminent dark:text-zinc-300",children:e},t)))})]}),t.extensions?.length>0&&(0,h.jsxs)("div",{className:"mb-6 border-t border-borderSubtle dark:border-zinc-700 pt-6",children:[(0,h.jsx)("h2",{className:"text-2xl font-medium mb-2 text-textProminent dark:text-white",children:"Extensions"}),(0,h.jsx)("div",{className:"flex flex-wrap gap-2",children:t.extensions.map(((e,t)=>{const n="string"==typeof e?e:e.name;return(0,h.jsx)("span",{className:`border rounded-full px-3 py-1 text-sm ${p[n]||"bg-gray-100 text-gray-800 border-gray-200 dark:bg-zinc-900 dark:text-zinc-300 dark:border-zinc-700"}`,children:n},t)}))})]}),t.prompt&&(0,h.jsxs)("div",{className:"mb-6 border-t border-borderSubtle dark:border-zinc-700 pt-6",children:[(0,h.jsx)("h2",{className:"text-2xl font-medium mb-4 text-textProminent dark:text-white",children:"Initial Prompt"}),(0,h.jsx)(c.A,{type:"info",className:"mb-4",children:"This prompt auto-starts the recipe when launched in Goose."}),(0,h.jsx)(l.A,{language:"markdown",children:t.prompt})]}),t.instructions&&(0,h.jsxs)("div",{className:"mb-6 border-t border-borderSubtle dark:border-zinc-700 pt-6",children:[(0,h.jsx)("h2",{className:"text-2xl font-medium mb-4 text-textProminent dark:text-white",children:"Instructions"}),(0,h.jsx)(l.A,{language:"markdown",children:t.instructions})]}),(0,h.jsxs)("div",{className:"pt-8 border-t border-borderSubtle dark:border-zinc-700 mt-6 flex gap-4",children:[(0,h.jsx)(o.A,{to:t.recipeUrl,target:"_blank",className:"inline-block text-white bg-black dark:bg-white dark:text-black px-6 py-2 rounded-full text-sm font-medium hover:bg-gray-900 dark:hover:bg-gray-100 transition-colors",children:"Launch in Goose Desktop \u2192"}),(0,h.jsxs)("div",{className:"relative group inline-block",children:[(0,h.jsx)("button",{onClick:()=>{if(j.length>0)return w({}),void v(!0);const e=`goose run --recipe ${t?.localPath}`;navigator.clipboard.writeText(e),m.Ay.success("CLI command copied!")},className:"text-sm font-medium px-6 py-2 rounded-full bg-zinc-200 dark:bg-zinc-800 text-zinc-700 dark:text-white hover:bg-zinc-300 dark:hover:bg-zinc-700 transition-colors cursor-pointer",children:"Copy Goose CLI Command"}),(0,h.jsx)("div",{className:"absolute bottom-full mb-2 left-1/2 -translate-x-1/2 hidden group-hover:block bg-zinc-800 text-white text-xs px-2 py-1 rounded shadow-lg whitespace-nowrap z-50",children:"Copies the CLI command to run this recipe"})]})]})]})]})}),y&&(0,h.jsx)("div",{className:"fixed inset-0 bg-black bg-opacity-60 z-50 flex items-center justify-center",children:(0,h.jsxs)("div",{className:"bg-white dark:bg-zinc-800 p-6 rounded-lg w-full max-w-md",children:[(0,h.jsx)("h3",{className:"text-lg font-semibold mb-4 text-zinc-900 dark:text-white",children:"Fill in parameters"}),j.map((e=>(0,h.jsxs)("div",{className:"mb-3",children:[(0,h.jsxs)("label",{className:"block text-sm text-zinc-700 dark:text-zinc-200 mb-1",children:[e.key," ","optional"===e.requirement&&(0,h.jsx)("span",{className:"text-zinc-400",children:"(optional)"})]}),(0,h.jsx)("input",{type:"text",value:k[e.key]||"",onChange:t=>w((n=>({...n,[e.key]:t.target.value}))),className:"w-full px-3 py-2 border border-zinc-300 dark:border-zinc-600 rounded bg-white dark:bg-zinc-700 text-zinc-900 dark:text-white"})]},e.key))),(0,h.jsxs)("div",{className:"flex justify-end gap-3",children:[(0,h.jsx)("button",{onClick:()=>v(!1),className:"text-sm text-zinc-600 dark:text-zinc-300 hover:underline",children:"Cancel"}),(0,h.jsx)("button",{onClick:()=>{const e=Object.entries(k).filter((e=>{let[,t]=e;return""!==t})).map((e=>{let[t,n]=e;return`${t}=${n}`})).join(" "),n=`goose run --recipe ${t?.localPath}${e?` --params ${e}`:""}`;navigator.clipboard.writeText(n),m.Ay.success("CLI command copied with params!"),v(!1)},className:"bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700",children:"Copy Command"})]})]})})]})}},54631:(e,t,n)=>{"use strict";n.d(t,{d:()=>a,q:()=>i});const r=n(75878);function a(e){return s().find((t=>t.id===e))||null}async function i(e){const t=s();return e?t.filter((t=>t.title?.toLowerCase().includes(e.toLowerCase())||t.description?.toLowerCase().includes(e.toLowerCase())||t.action?.toLowerCase().includes(e.toLowerCase())||t.activities?.some((t=>t.toLowerCase().includes(e.toLowerCase()))))):t}function s(){return r.keys().map((e=>function(e){const t={id:e.id||e.title?.toLowerCase().replace(/\s+/g,"-")||"untitled-recipe",title:e.title||"Untitled Recipe",description:e.description||"No description provided.",instructions:e.instructions,prompt:e.prompt,extensions:Array.isArray(e.extensions)?e.extensions.map((e=>"string"==typeof e?{type:"builtin",name:e}:e)):[],activities:Array.isArray(e.activities)?e.activities:[],version:e.version||"1.0.0",author:"string"==typeof e.author?{contact:e.author}:e.author||void 0,action:e.action||void 0,persona:e.persona||void 0,tags:e.tags||[],recipeUrl:"",localPath:`documentation/src/pages/recipes/data/recipes/${e.id}.yaml`};if(Array.isArray(e.parameters)){for(const t of e.parameters)"required"!==t.requirement||t.value||(t.value=`{{${t.key}}}`);t.parameters=e.parameters}const n={title:t.title,description:t.description,instructions:t.instructions,prompt:t.prompt,activities:t.activities,extensions:t.extensions,parameters:t.parameters||[]},r=function(e){if("undefined"!=typeof window&&window.btoa)return window.btoa(unescape(encodeURIComponent(e)));return Buffer.from(e).toString("base64")}(JSON.stringify(n));return t.recipeUrl=`goose://recipe?config=${r}`,t}({...r(e).default||r(e),id:e.replace(/^.*[\\/]/,"").replace(/\.(yaml|yml)$/,"")})))}},14679:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r={id:"clean-up-feature-flag",title:"Clean Up Feature Flag",description:"Automatically clean up all references of a fully rolled out feature flag from a codebase and make the new behavior the default.",instructions:"Your job is to systematically remove a fully rolled out feature flag and ensure the new behavior is now the default. Use code search tools like ripgrep to identify all references to the flag, clean up definition files, usage sites, tests, and configuration files. Then create a commit and push changes with clear commit messages documenting the flag removal.\n",author:{contact:"amitdev"},extensions:[{type:"builtin",name:"developer"}],activities:["Remove feature flag definitions","Clean up feature flag usage sites","Update affected tests","Remove flag configurations","Document flag removal"],parameters:[{key:"feature_flag_key",input_type:"string",requirement:"required",description:"Key of the feature flag",value:"MY_FLAG"},{key:"repo_dir",input_type:"string",requirement:"optional",default:"./",description:"Directory of the codebase",value:"./"}],prompt:"Task: Remove a feature flag that has been fully rolled out, where the feature flag's functionality should become the default behavior.\n\nContext:\n\nFeature flag key: {{feature_flag_key}}\nProject: {{repo_dir}}\nFeature is fully rolled out and stable, meaning the feature flag is always evaluated to true or Treatment, etc.\n\nSteps to follow:\n\n1. Check out a *new* branch from main or master named using the feature flag key.\n2. Find the feature flag constant/object that wraps the key.\n3. Search for all references to the constant/object using ripgrep or equivalent tools.\n4. For each file that contains references:\n   - **Definition files**: Remove the flag definition and related imports.\n   - **Usage sites**: Remove conditional logic and default to the new behavior. Clean up related imports.\n   - **Test files**: Remove tests that cover the 'disabled' state of the flag and update remaining ones. Clean up mocks and imports.\n   - **Configuration files**: Remove entries related to the feature flag.\n5. Re-run a full-text search to ensure all references (and imports) are removed.\n6. Clean up now-unused variables or functions introduced solely for the flag.\n7. Double-check for and remove any leftover imports or dead code.\n8. Create a commit with **only the files affected by this cleanup** (don\u2019t use `git add .`).\n9. Push the branch to origin.\n10. Open a GitHub PR using: `https://github.com/squareup/<repo-name>/compare/<branch-name>` and replace the repo and branch placeholders.\n\nUse clear commit messages like:\n\n  chore(flag-cleanup): remove <feature_flag_key> flag from codebase\n\nExplain the flag was fully rolled out and the new behavior is now default.\n"}},59313:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r={id:"pr-generator",title:"PR Generator",description:"Automatically generate pull request descriptions based on changes in a local git repo.",instructions:"Your job is to generate descriptive and helpful pull request descriptions without asking for additional information. Generate commit messages and branch names based on the actual code changes.\n",author:{contact:"lifeizhou-ap"},extensions:[{type:"builtin",name:"developer"},{type:"builtin",name:"memory"}],parameters:[{key:"git_repo_path",input_type:"string",requirement:"required",description:"Path to the local git repository",value:"{{git_repo_path}}"},{key:"push_pr",input_type:"boolean",requirement:"optional",description:"Whether to push changes and create a PR",value:!1}],activities:["Generate PR","Analyze staged git changes","Create PR description"],action:"Generate PR",prompt:"Analyze the staged changes and any unpushed commits in the git repository {{git_repo_path}} to generate a comprehensive pull request description. Work autonomously without requesting additional information.\n\nAnalysis steps:\n1. Get current branch name using `git branch --show-current`\n2. If not on main/master/develop:\n   - Check for unpushed commits: `git log @{u}..HEAD` (if upstream exists)\n   - Include these commits in the analysis\n3. Check staged changes: `git diff --staged`\n4. Save the staged changes diff for the PR description\n5. Determine the type of change (feature, fix, enhancement, etc.) from the code\n\nGenerate the PR description with:\n1. A clear summary of the changes, including:\n   - New staged changes\n   - Any unpushed commits (if on a feature branch)\n2. Technical implementation details based on both the diff and unpushed commits\n3. List of modified files and their purpose\n4. Impact analysis (what areas of the codebase are affected)\n5. Testing approach and considerations\n6. Any migration steps or breaking changes\n7. Related issues or dependencies\n\nUse git commands:\n- `git diff --staged` for staged changes\n- `git log @{u}..HEAD` for unpushed commits\n- `git branch --show-current` for current branch\n- `git status` for staged files\n- `git show` for specific commit details\n- `git rev-parse --abbrev-ref --symbolic-full-name @{u}` to check if branch has upstream\n\nFormat the description in markdown with appropriate sections and code blocks where relevant.\n\n{% if push_pr %}\nExecute the following steps for pushing:\n1. Determine branch handling:\n   - If current branch is main/master/develop or unrelated:\n     - Generate branch name from staged changes (e.g., 'feature-add-user-auth')\n     - Create and switch to new branch: `git checkout -b [branch-name]`\n   - If current branch matches changes:\n     - Continue using current branch\n     - Note any unpushed commits\n\n2. Handle commits and push:\n   a. If staged changes exist:\n      - Create commit using generated message: `git commit -m \"[type]: [summary]\"`\n      - Message should be concise and descriptive of actual changes\n   b. Push changes:\n      - For existing branches: `git push origin HEAD`\n      - For new branches: `git push -u origin HEAD`\n\n3. Create PR:\n   - Use git/gh commands to create PR with generated description\n   - Set base branch appropriately\n   - Print PR URL after creation\n\nBranch naming convention:\n- Use kebab-case\n- Prefix with type: feature-, fix-, enhance-, refactor-\n- Keep names concise but descriptive\n- Base on actual code changes\n\nCommit message format:\n- Start with type: feat, fix, enhance, refactor\n- Followed by concise description\n- Based on actual code changes\n- No body text needed for straightforward changes\n\nDo not:\n- Ask for confirmation or additional input\n- Create placeholder content\n- Include TODO items\n- Add WIP markers\n{% endif %}\n"}},75878:(e,t,n)=>{var r={"./clean-up-feature-flag.yaml":14679,"./pull-request-generator.yaml":59313};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=i,e.exports=a,a.id=75878},75395:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(96540);const a=(...e)=>e.filter(((e,t,n)=>Boolean(e)&&""!==e.trim()&&n.indexOf(e)===t)).join(" ").trim();var i={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const s=(0,r.forwardRef)((({color:e="currentColor",size:t=24,strokeWidth:n=2,absoluteStrokeWidth:s,className:o="",children:c,iconNode:l,...d},u)=>(0,r.createElement)("svg",{ref:u,...i,width:t,height:t,stroke:e,strokeWidth:s?24*Number(n)/Number(t):n,className:a("lucide",o),...d},[...l.map((([e,t])=>(0,r.createElement)(e,t))),...Array.isArray(c)?c:[c]]))),o=(e,t)=>{const n=(0,r.forwardRef)((({className:n,...i},o)=>{return(0,r.createElement)(s,{ref:o,iconNode:t,className:a(`lucide-${c=e,c.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,n),...i});var c}));return n.displayName=`${e}`,n}},16445:(e,t,n)=>{"use strict";n.d(t,{A:()=>r});const r=(0,n(75395).A)("ArrowLeft",[["path",{d:"m12 19-7-7 7-7",key:"1l729n"}],["path",{d:"M19 12H5",key:"x3x0zl"}]])}}]);